class AIMoveFromPlayer : ZilchComponent
{
    [Property]
    var MoveSpeed : Real = 4;
    
    [Property]
    var MovesAwayFromPlayer : Boolean = false;
    
    var Player : Cog;
    var BubbleBool : Boolean = false;
    var BubbleTimer : Real = 0;
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
        this.Player = this.Space.FindObjectByName("Player");
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
        if(this.Space.FindObjectByName("Room").RoomScript.AttackDelay > 0)
            return;
        var playerPos : Real3 = Real3(0,0,0);
        var randGen : Random = Random();
        var randomAngle = Real3(randGen.Range(-0.2, 0.2), randGen.Range(-0.2, 0.2), 0);
        var angle : Real3 = Real3(0,0,0);
        if (this.Player != null)
        {
            playerPos = this.Player.Transform.Translation;
        }
        if (this.MovesAwayFromPlayer)
        {
            angle = Math.Normalize(this.Owner.Transform.Translation - playerPos);
        }
        else
        {
            angle = Math.Normalize(playerPos - this.Owner.Transform.Translation);
        }
        if (this.BubbleBool == false)
        {
            this.Owner.RigidBody.Velocity = (angle+randomAngle) * this.MoveSpeed;
        }
        this.BubbleTimer -= event.Dt;
        if (this.BubbleTimer <= 0)
        {
            this.BubbleBool = false;
        }
    }
}
