class PlayerShoot : ZilchComponent
{
    [Property] var BulletDelay : Real = 1;
    [Property] var BulletSpeed : Real = 1000;
    var TimeUntilNextShot : Real = 0;
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
        this.TimeUntilNextShot -= event.Dt;
        var mouseScreenPosition = Zero.Mouse.ScreenPosition;
        var mouseWorldPosition = this.LevelSettings.CameraViewport.ScreenToWorldZPlane(mouseScreenPosition, 0);
        if(Zero.Keyboard.KeyIsDown(Keys.Space) && this.TimeUntilNextShot <= 0)
        {
            this.TimeUntilNextShot = this.BulletDelay;
            var shotAngle = Math.Normalize(mouseWorldPosition - this.Owner.Transform.Translation);
            var bullet = this.Space.CreateAtPosition(Archetype.Bullet, this.Owner.Transform.Translation + shotAngle);
            bullet.RigidBody.ApplyForce(shotAngle * this.BulletSpeed);
        }
    }
}
