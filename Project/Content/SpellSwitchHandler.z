/* --------------------------------------------------------------------------------------------------
** Team MagiDev
** © 2017 DigiPen Institute of Technology, All Rights Reserved.
**
** PlayerFade.z
**
** Author:
** - Nelson Athow
**
** Contributors:
** - None
**
** Description:
** Changes player collision group to a collision group that only interacts with default.
** Changes back to normal collision after timer is up.
** --------------------------------------------------------------------------*/
//      10        20        30        40        50        60        70        80        90       100
enum SpellTypes {BASIC, BUBBLETRAP}
class SpellSwitchHandler : ZilchComponent
{
    var SpellArray : Array[SpellTypes] = Array[SpellTypes]();
    var CurrentSpell : SpellTypes = SpellTypes.BASIC;
    var PrivateSpellIndex : Integer = 0;
    var SpellIndex : Integer
    {
        get {return this.PrivateSpellIndex;}
        set 
        {
            if(this.PrivateSpellIndex < this.SpellArray.Count-1)
            {
                this.PrivateSpellIndex += 1;
            }
            else 
            {
                this.PrivateSpellIndex = 0;
            }
        }
    }
    
    function SetSpell(bulletSpeed : Real, bulletDelay : Real, bulletType : Archetype, shotPattern : ShotPatternID)
    {
        this.Owner.PlayerShoot.BulletSpeed = bulletSpeed;
        this.Owner.PlayerShoot.BulletDelay = bulletDelay;
        this.Owner.PlayerShoot.ShotPattern = shotPattern;
        
        this.Owner.Shoot.BulletType = bulletType;
    }
    
    //function SetSpellHUD(bulletSprite : SpriteSource, spellName : SpriteText)
    //{
    //    this.Owner.Camera.SpellHUD.SpellIcon.SpriteSource = bulletSprite;
    //    this.Owner.Camera.SpellHUD.SpellName.SpriteText = spellName;
    //}
    
    function Initialize(init : CogInitializer)
    {
        this.SpellArray.Add(SpellTypes.BASIC);
        this.SpellArray.Add(SpellTypes.BUBBLETRAP);
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
        
        if (Zero.Keyboard.KeyIsPressed(Keys.Q))
        {
            this.SpellIndex += 1;
            this.CurrentSpell = this.SpellArray.Get(this.PrivateSpellIndex);
            if(this.CurrentSpell == SpellTypes.BASIC)
            {
                this.SetSpell(200, 1, Archetype.Bullet, ShotPatternID.SINGLE);
            }
            else if(this.CurrentSpell == SpellTypes.BUBBLETRAP)
            {
                this.SetSpell(200, 1, Archetype.BubbleBullet, ShotPatternID.SINGLE);
            }
        }
    }
}
