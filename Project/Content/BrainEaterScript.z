class BrainEaterScript : ZilchComponent
{
    var Player : Cog;
    var AttackTimer : Real = 0;
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
        Zero.Connect(this.Owner, Events.CollisionPersisted, this.OnCollisionPersist);
        this.Player = this.Space.FindObjectByName("Player");
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
        var playerPos : Real3 = Real3(0,0,0);
        if (this.Player != null)
        {
            playerPos = this.Player.Transform.Translation;
        }
        var angle = Math.Normalize(playerPos - this.Owner.Transform.Translation);
        this.Owner.RigidBody.Velocity = angle * 4;
        this.AttackTimer -= event.Dt;
    }
    
    function OnCollisionPersist(event : CollisionEvent)
    {
        if (event.OtherObject.HitpointScript != null && this.AttackTimer <= 0)
        {
            event.OtherObject.HitpointScript.HP -= 1;
            this.AttackTimer = 0.5;
        }
    }
}
