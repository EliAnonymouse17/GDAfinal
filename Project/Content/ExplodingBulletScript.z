class ExplodingBulletScript : ZilchComponent
{
    
    var RainbowShotBoolean : Boolean = false;
    
    [Property] 
    var AngleOffset : Real = 90;
    
    [Property]
    var ArchetypeToSpawn : Archetype = null;
    
    [Property]
    var SpawnedBulletVelocity : Real = 25;
    
    [Property]
    var NumBullets : Integer = 14;
    
    [Property]
    var BoomSound : SoundCue = SoundCue.ExplodingBulletImpact;
    
    [Property]
    var DestroyOwner : Boolean = true;
    
    var HasCollided : Boolean = false;
    
    var Angle : Real = 0;
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Owner, Events.CollisionStarted, this.OnCollisionStarted);
    }
    function SpawnBullets()
    {
        
        if(this.Owner.ArchetypeName == "RainbowShot")
        {
            if(this.RainbowShotBoolean == false)
            {
                return;
            }
        }
        
        for (var i = 0; i < this.NumBullets; ++i)
        {
            this.Angle = Math.ATan2(0,0) - (i-1)*(Math.ToRadians(360 / this.NumBullets));
            var bullet = this.Space.CreateAtPosition(this.ArchetypeToSpawn, this.Owner.Transform.Translation);
            var newAngle = Real3(Math.Sin(this.Angle), Math.Cos(this.Angle), 0);
            newAngle = Math.Normalize(newAngle);
            bullet.RigidBody.ApplyForce(newAngle * this.SpawnedBulletVelocity);
            
            // calculate the angle of the firing vector in radians, apply angle offset
            var fireAngle = Math.ATan2(newAngle.Y, newAngle.X) - Math.ToRadians(this.AngleOffset);
            
            // set the z rotation for this bullet
            bullet.Transform.SetEulerAnglesXYZ(0, 0, fireAngle);
        }
        
        if(!this.HasCollided)
        {
            this.HasCollided = true;
        }
        
        if (this.BoomSound != null)
        {
            this.Space.SoundSpace.PlayCue(this.BoomSound);
        }
        if(this.DestroyOwner)
        {
            this.Owner.Destroy();
        }
    }

    function OnCollisionStarted(event : CollisionEvent)
    {
        if(this.HasCollided)
        {
            return;
        }
        
        this.SpawnBullets();
        
    }
}
