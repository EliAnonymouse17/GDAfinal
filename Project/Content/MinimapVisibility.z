class MinimapVisibility : ZilchComponent
{
    
    var CurrentlyVisible : Boolean = true;
    
    var MinimapNodeArray : Array[Cog] = Array[Cog]();
    
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
        this.Owner.Sprite.Visible = true;
        var miniMapNodes = this.Space.FindAllChildrenByName("MinimapNode");
        
        foreach(var node in miniMapNodes)
        {
            this.MinimapNodeArray.Add(node);
        }
        
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
        
        
        
        if(Zero.Keyboard.KeyIsPressed(Keys.M))
        {
            var nodeCount = this.MinimapNodeArray.Count;
            
            if(this.CurrentlyVisible)
            {
                this.Owner.Sprite.Visible = false;
                this.CurrentlyVisible = false;
                for(var i = 0; i < nodeCount; ++i)
                {
                    this.MinimapNodeArray[i].Sprite.Visible = false;
                }
            }
            else
            {
                this.Owner.Sprite.Visible = true;
                this.CurrentlyVisible = true;
                for(var i = 0; i < nodeCount; ++i)
                {
                    this.MinimapNodeArray[i].Sprite.Visible = true;
                }
            }
        }
        
    }
}
